rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null &&
             request.auth.token.role == 'admin';
    }

    // Helper function to validate video files
    function isValidVideoFile() {
      return request.resource.size <= 100 * 1024 * 1024 && // 100MB limit
             request.resource.contentType.matches('video/.*') && // Only video files
             request.resource.contentType in [
               'video/mp4',
               'video/mpeg',
               'video/quicktime',
               'video/avi',
               'video/mov',
               'video/wmv',
               'video/webm'
             ];
    }

    // Student videos - students can only access their own folder
    match /videos/{userId}/{fileName} {
      // Students can read their own videos
      allow read: if request.auth != null &&
                    request.auth.uid == userId;

      // Students can write their own videos with validation
      allow write: if request.auth != null &&
                     request.auth.uid == userId &&
                     isValidVideoFile();

      // Admins can read all videos for review
      allow read: if isAdmin();

      // Admins can delete videos if needed
      allow delete: if isAdmin();
    }

    // Profile images - users can upload their own profile pictures
    match /profile-images/{userId}/{fileName} {
      allow read, write: if request.auth != null &&
                            request.auth.uid == userId &&
                            request.resource.size <= 5 * 1024 * 1024 && // 5MB limit
                            request.resource.contentType.matches('image/.*');

      // Anyone can read profile images
      allow read: if true;

      // Admins can manage all profile images
      allow read, write, delete: if isAdmin();
    }

    // Course content (images, videos, etc.) - only admins can manage
    match /content/{courseId}/{fileName} {
      // Anyone can read published course content
      allow read: if true;

      // Only admins can upload/manage course content
      allow write, delete: if isAdmin() &&
                              request.resource.size <= 200 * 1024 * 1024; // 200MB for course content
    }

    // System files and backups - admin only
    match /system/{fileName} {
      allow read, write, delete: if isAdmin();
    }

    // Skills media (images, videos for quiz questions, etc.) - admin only
    match /skills/media/{fileName} {
      // Anyone can read skill media
      allow read: if true;

      // Only admins can upload/manage skill media
      allow write, delete: if isAdmin() &&
                              request.resource.size <= 20 * 1024 * 1024; // 20MB limit
    }

    // Sports images - admin only
    match /sports/images/{fileName} {
      // Anyone can read sport images
      allow read: if true;

      // Only admins can upload/manage sport images
      allow write, delete: if isAdmin() &&
                              request.resource.size <= 2 * 1024 * 1024; // 2MB limit
    }

    // Default deny - any other paths are blocked
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}