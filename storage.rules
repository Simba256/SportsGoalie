rules_version = '2';

// Firebase Storage Security Rules for SportsGoalie
service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() &&
             request.auth.token.role == 'admin';
    }

    function isValidImageSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB
    }

    function isValidVideoSize() {
      return request.resource.size < 100 * 1024 * 1024; // 100MB
    }

    function isValidLargeVideoSize() {
      return request.resource.size < 500 * 1024 * 1024; // 500MB for quiz videos
    }

    function isValidDocumentSize() {
      return request.resource.size < 10 * 1024 * 1024; // 10MB
    }

    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }

    function isValidVideoType() {
      return request.resource.contentType.matches('video/.*');
    }

    function isValidDocumentType() {
      return request.resource.contentType.matches('application/pdf') ||
             request.resource.contentType.matches('application/msword') ||
             request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.*');
    }

    // Video quiz uploads (admin only, public read)
    match /video-quizzes/{fileName} {
      // Anyone can read quiz videos
      allow read: if true;
      // Any authenticated user can upload (admin check at application level)
      allow write: if isAuthenticated() && isValidLargeVideoSize() && isValidVideoType();
      // Only admins can delete
      allow delete: if isAdmin();
    }

    // Video uploads for students and admins
    match /videos/{userId}/{fileName} {
      // Users can upload their own videos
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidVideoSize() && isValidVideoType();
      allow delete: if isOwner(userId) || isAdmin();
    }

    // Message attachments - Images
    match /messages/images/{userId}/{fileName} {
      // Authenticated users can upload message attachments
      // Admin check is enforced at application level
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageSize() && isValidImageType();
      allow delete: if isAuthenticated();
    }

    // Message attachments - Videos
    match /messages/videos/{userId}/{fileName} {
      // Authenticated users can upload message attachments
      // Admin check is enforced at application level
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidVideoSize() && isValidVideoType();
      allow delete: if isAuthenticated();
    }

    // Message attachments - Documents
    match /messages/documents/{userId}/{fileName} {
      // Authenticated users can upload message attachments
      // Admin check is enforced at application level
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidDocumentSize() && isValidDocumentType();
      allow delete: if isAuthenticated();
    }

    // Profile images
    match /profiles/{userId}/{fileName} {
      allow read: if true; // Public read
      allow write: if isOwner(userId) && isValidImageSize() && isValidImageType();
      allow delete: if isOwner(userId) || isAdmin();
    }

    // Sports images (for admin portal)
    match /sports/images/{fileName} {
      allow read: if true; // Public read for sport images
      allow write: if isAuthenticated() && isValidImageSize() && isValidImageType();
      allow delete: if isAdmin();
    }

    // Skills media (images and videos for admin portal)
    match /skills/media/{fileName} {
      allow read: if true; // Public read for skill media
      allow write: if isAuthenticated() &&
                      ((isValidImageSize() && isValidImageType()) ||
                       (isValidVideoSize() && isValidVideoType()));
      allow delete: if isAdmin();
    }

    // Course content (for admin portal)
    match /courses/{courseId}/{fileName} {
      allow read: if true; // Public read for course content
      allow write: if isAuthenticated() &&
                      ((isValidImageSize() && isValidImageType()) ||
                       (isValidVideoSize() && isValidVideoType()) ||
                       (isValidDocumentSize() && isValidDocumentType()));
      allow delete: if isAdmin();
    }

    // General images folder (fallback for other image uploads)
    match /images/{fileName} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() && isValidImageSize() && isValidImageType();
      allow delete: if isAdmin();
    }

    // General videos folder (fallback for other video uploads)
    match /videos/{fileName} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() && isValidVideoSize() && isValidVideoType();
      allow delete: if isAdmin();
    }

    // General documents folder
    match /documents/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidDocumentSize() && isValidDocumentType();
      allow delete: if isAdmin();
    }

    // Default deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
